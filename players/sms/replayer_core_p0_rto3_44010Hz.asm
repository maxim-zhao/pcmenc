;----------------------------------------------------------------------------
; Copyright (C) 2006 Arturo Ragozini and Daniel Vik
;
; This software is provided 'as-is', without any express or implied
; warranty. In no event will the authors be held liable for any damages
; arising from the use of this software.
;
; Permission is granted to anyone to use this software for any purpose,
; including commercial applications, and to alter it and redistribute it
; freely, subject to the following restrictions:
;
; 1. The origin of this software must not be misrepresented; you must not
; claim that you wrote the original software. If you use this software
; in a product, an acknowledgment in the product documentation would be
; appreciated but is not required.
; 2. Altered source versions must be plainly marked as such, and must not be
; misrepresented as being the original software.
; 3. This notice may not be removed or altered from any source distribution.
;----------------------------------------------------------------------------

; Modified in 2016 by Maxim for operation on Sega 8-bit consoles (and similar 
; hardware with IO-mapped SN76489 variants)

;
; Replayer core to play RLE encoded 44010Hz samples generated by pcmenc
;
; pcmenc should use the following command line arguments:
;
; pcmenc -p 0 -rto 3 -dt1 79 -dt2 79 -dt3 86 file.wav
;
; and optionally -r to split sample into blocks for rom replayer
;

; There is one channel updates per underlying sample.
; We emit three channel updates, as evenly spaced as possible, looping
; every 244 cycles, to match an underlying sample at 44011Hz
; (3579545 / 244 * 3 = 44010.8)
; We need 60 cycles per channel, and looping can be split as 10 + 26 cycles.
; This leaves our timings as:
; /work/loop/padding
; Sample A
;   60      + 19 = 79
; Sample B
;   60 + 10 +  9 = 79
; Sample C
;   60 + 26      = 86
;                 ---
;                 244

;-------------------------------------
; Plays one sample
; HL - pointes to triplet count followed by data
;-------------------------------------
PLAY_SAMPLE:
  ; zero out the RLE counters
  ld c,$00
  ld de,$0000
  ; get the triplet count
  ld a, (hl)
  inc hl
  ld ixl, a
  ld a, (hl)
  inc hl
  ld ixh, a

PsgLoop:
; Calculate channel A volume
  ld a,c          ; 4
  sub $10         ; 7
  jr nc,PsgWaitA  ; 7 (12)
  ld a,(hl)       ; 7
  inc hl          ; 6
  ld c,a          ; 4
  and $0f         ; 7
  or $90          ; 7
  out ($7f),a     ; 11 -> 60
PsgDoneA:
  ld a,i          ;  9
  bit 0,a         ; 10 -> 19
  
; Calculate channel B volume
  ld a,d          ;  4
  sub $10         ;  7
  jr nc,PsgWaitB  ;  7 (12)
  ld a,(hl)       ;  7
  inc hl          ;  6
  ld d,a          ;  4
  and $0f         ;  7
  or $b0          ;  7
  out ($7f),a     ; 11 -> 60
PsgDoneB:
  dec ix          ; 10 (real work)
  ld a,i          ;  9 -> 19

; Calculate channel C volume
  ld a,e          ;  4
  sub $10         ;  7
  jr nc,PsgWaitC  ;  7 (12)
  ld a,(hl)       ;  7
  inc hl          ;  6
  ld e,a          ;  4
  and $0f         ;  7
  or $d0          ;  7
  out ($7f),a     ; 11 -> 60
PsgDoneC:

  ; dec ix was done above
  ld a,ixh        ;  8
  or ixl          ;  8
  jp nz,PsgLoop   ; 10 -> 26 -> total 244
  ret

PsgWaitA:
  ; We want to save a to the RLE register,
  ; waste 21 cycles, then jump back to the main flow
  ld c,a      ;  4
  push hl     ; 11
  pop hl      ; 10
  jr PsgDoneA ; 12 -> 37
  
PsgWaitB:
  ld d,a      ;  4
  push hl     ; 11
  pop hl      ; 10
  jr PsgDoneB ; 12 -> 37
  
PsgWaitC:
  ld e,a      ;  4
  push hl     ; 11
  pop hl      ; 10
  jr PsgDoneC ; 12 -> 37

