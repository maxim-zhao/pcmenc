;----------------------------------------------------------------------------
; Copyright (C) 2006 Arturo Ragozini and Daniel Vik
;
; This software is provided 'as-is', without any express or implied
; warranty. In no event will the authors be held liable for any damages
; arising from the use of this software.
;
; Permission is granted to anyone to use this software for any purpose,
; including commercial applications, and to alter it and redistribute it
; freely, subject to the following restrictions:
;
; 1. The origin of this software must not be misrepresented; you must not
; claim that you wrote the original software. If you use this software
; in a product, an acknowledgment in the product documentation would be
; appreciated but is not required.
; 2. Altered source versions must be plainly marked as such, and must not be
; misrepresented as being the original software.
; 3. This notice may not be removed or altered from any source distribution.
;----------------------------------------------------------------------------

; Modified in 2016 by Maxim for operation on Sega 8-bit consoles (and similar 
; hardware with IO-mapped SN76489 variants)

;
; Replayer core to play packed-volume 22051kHz samples generated by pcmenc
;
; pcmenc should use the following command line arguments:
;
; pcmenc -rto 3 -p 4 -dt1 162 -dt2 162 -dt3 163 file.wav
;
; and optionally -r <n> to split sample into n KB blocks for a banked replayer


; There is one channel update per underlying sample.
; We emit three channel updates, as evenly spaced as possible, looping
; every 487 cycles, to match an underlying sample at 22051Hz

;-------------------------------------
; Plays one sample
; HL - pointes to triplet count followed by data
;-------------------------------------
PLAY_SAMPLE:
  ld c, (hl)
  inc hl
  ld b, (hl)
  inc hl
  
.macro GetHi
  ld a,(hl)       ; 7
  .repeat 4
  rra             ; 16
  .endr
  and $0f         ; 7
.endm             ; Total 30

.macro GetLo
  ld a,(hl)       ; 7
  inc hl          ; 6
  and $0f         ; 7
.endm             ; Total 20

.macro PlayHi args channel
  GetHi           ; 30
  or (channel << 5) | $90 ; 7
  out ($7f),a     ; 11 -> 48
.endm

.macro PlayLo args channel
  GetLo           ; 20
  or (channel << 5) | $90 ; 7
  out ($7f),a     ; 11 -> 38
.endm

PsgLoop:
  PlayHi 0        ;  48 -> 163

  call Delay124   ; 124
  PlayLo 1        ;  38 -> 162
  
  call Delay114   ; 114
  PlayHi 2        ;  48 -> 162
  
  dec bc          ;   6
  ld a,b          ;   4
  or c            ;   4
  ret z           ;   5
  call Delay106   ; 106
  PlayLo 0        ;  38 -> 163
  
  call Delay114   ; 114
  PlayHi 1        ;  48 -> 162

  call Delay124   ; 124
  PlayLo 2        ;  38 -> 162

  call Delay91    ;  91
  dec bc          ;   6
  ld a,b          ;   4
  or c            ;   4
  jp nz, PsgLoop  ;  10
  ret

Delay124:
  jp Delay114     ; 10
Delay114:
  neg             ;  8
Delay106:
  neg             ;  8
  ld a,0          ;  7
Delay91:
  ; call          ; 17
  push bc         ; 11
    ld b,2        ;  7
-:  nop           ;  4*2
    djnz -        ; 13*2 - 5
    ld b,0        ;  7
  pop bc          ; 10
  ret             ; 10 -> 91
  