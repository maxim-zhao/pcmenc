;----------------------------------------------------------------------------
; Copyright (C) 2006 Arturo Ragozini and Daniel Vik
;
; This software is provided 'as-is', without any express or implied
; warranty. In no event will the authors be held liable for any damages
; arising from the use of this software.
;
; Permission is granted to anyone to use this software for any purpose,
; including commercial applications, and to alter it and redistribute it
; freely, subject to the following restrictions:
;
; 1. The origin of this software must not be misrepresented; you must not
; claim that you wrote the original software. If you use this software
; in a product, an acknowledgment in the product documentation would be
; appreciated but is not required.
; 2. Altered source versions must be plainly marked as such, and must not be
; misrepresented as being the original software.
; 3. This notice may not be removed or altered from any source distribution.
;----------------------------------------------------------------------------

; Modified in 2016 by Maxim for operation on Sega 8-bit consoles (and similar 
; hardware with IO-mapped SN76489 variants)

;
; Replayer core to play packed-volume 8008Hz samples generated by pcmenc
;
; pcmenc should use the following command line arguments:
;
; pcmenc -rto 3 -p 4 -dt1 447 -dt2 447 -dt3 447 file.wav
;
; and optionally -r to split sample into blocks for rom replayer
;

; There is one channel update per underlying sample.
; We want them to be 447 cycles apart.

;-------------------------------------
; Plays one sample
; HL - pointes to triplet count followed by data
;-------------------------------------
PLAY_SAMPLE:
  ld c, (hl)
  inc hl
  ld b, (hl)
  inc hl
  
.macro GetHi
  ld a,(hl)       ; 7
  .repeat 4
  rra             ; 16
  .endr
  and $0f         ; 7
.endm             ; Total 30

.macro GetLo
  ld a,(hl)       ; 7
  inc hl          ; 6
  and $0f         ; 7
.endm             ; Total 14

.macro PlayHi args channel
  GetHi           ; 30
  or (channel << 5) | $90 ; 7
  out ($7f),a     ; 11 -> 48
.endm

.macro PlayLo args channel
  GetLo           ; 14
  or (channel << 5) | $90 ; 7
  out ($7f),a     ; 11 -> 32
.endm

PsgLoop:
  PlayHi 0        ;  48
  call Delay399   ; 399 -> 447

  PlayLo 1        ;  32
  call Delay415   ; 415 -> 447

  PlayHi 2        ;  48
  dec bc          ;   7
  ld a,b          ;   4
  or c            ;   4
  ret z           ;   5
  call Delay379   ; 379 -> 447
  
  PlayLo 0        ;  32
  call Delay415   ; 415 -> 447

  PlayHi 1        ;  48
  call Delay399   ; 399 -> 447

  PlayLo 2        ;  32
  dec bc          ;   7
  ld a,b          ;   4
  or c            ;   4
  ret z           ;   5
  call Delay385   ; 385
  jp PsgLoop      ;  10 -> 447
  ret

Delay415:
  ld a, 27        ;  7
  jp Delay        ; 10 + 13 * 26 + 43
    
Delay399:
  ld a, 25        ; 7
  jp +            ; 10
+:jp Delay        ; 10 + 13 * 24 + 43

Delay385:
  ld a, 0         ; 7 (time wasting)
  ld a, 25        ; 7
  jr Delay        ; 12 + 13 * 24 + 43
  
Delay379:
  ld a, 25        ; 7
  ; fall through

Delay:
  push bc         ; 11
    ld b, a       ;  4
  -:djnz -        ; 13(n-1) + 8
  pop bc          ; 10
  ret             ; 10 -> 13n + 43
  